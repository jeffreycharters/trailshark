# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - ../graph/*.gql

# Where should the generated server code go?
exec:
  layout: single-file
  filename: ../graph/generated.go
  package: graph

# Where should any generated models go?
model:
  filename: ../graph/models_gen.go
  package: graph

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: ../graph

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - github.com/jeffreycharters/trailshark/backsy/graph
  - github.com/jeffreycharters/trailshark/backsy/ent

omit_gqlgen_version_in_file_notice: true
omit_slice_element_pointers: false
skip_validation: true
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/jeffreycharters/trailshark/backsy/pkg/ulid.ID
